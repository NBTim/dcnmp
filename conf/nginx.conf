user  nginx;
worker_processes  1;

pid        /var/run/nginx.pid;
error_log  /var/log/nginx/nginx.error.log warn;

events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /dev/null;
    #access_log  /var/log/dnmp/nginx.access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;
    
    # 请求频率限制 （开启之后，要配置虚拟主机的server）
    # limit_conn_zone $binary_remote_addr zone=addr:10m;
    # 限制一秒2个请求
    # limit_req_zone $binary_remote_addr zone=one:10m rate=2r/s;

    # 开启gzip
    # gzip on;
    # 启用gzip压缩的最小文件，小于设置值的文件将不会压缩
    # gzip_min_length 1k;
    # gzip 压缩级别，1-10，数字越大压缩的越好，也越占用CPU时间，后面会有详细说明
    # gzip_comp_level 2;
    # 进行压缩的文件类型。javascript有多种形式。其中的值可以在 mime.types 文件中找到。
    # gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png font/ttf font/otf image/svg+xml;
    # 是否在http header中添加Vary: Accept-Encoding，建议开启
    # gzip_vary on;
    # 禁用IE 6 gzip
    # gzip_disable "MSIE [1-6]\.";
    
    # 禁止ip访问 80,443端口
    server {
      listen 80 default;
      # listen 443 ssl default_server;
      server_name _;
      return 403;
        
      #ssl_certificate conf.d/ssl/demo.crt; 
      #ssl_certificate_key conf.d/ssl/demo.key;
      #ssl_session_cache shared:SSL:1m;
      #ssl_session_timeout  10m;
      #ssl_ciphers HIGH:!aNULL:!MD5;
      #ssl_prefer_server_ciphers on;
    }

    include /etc/nginx/conf.d/*.conf;
}

